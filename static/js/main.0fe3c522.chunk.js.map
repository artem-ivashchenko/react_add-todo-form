{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","email","name","className","href","TodoInfo","todo","id","completed","title","TodoList","todos","map","username","findUser","usersFromServer","find","initialTodos","userId","App","useState","setTodos","newTitle","setNewTitle","isTitleError","setIsTitleError","newUser","setNewUser","isUserError","setIsUserError","action","method","onSubmit","event","preventDefault","previousTodos","Math","max","htmlFor","type","placeholder","value","onChange","test","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0fe3c522.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user: { email, name } }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo: {\n    id, completed, title, user,\n  },\n}) => {\n  return (\n    <article\n      data-id={id}\n      className={`TodoInfo ${completed && 'TodoInfo--completed'}`}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport { User } from './types/User';\n\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\n\nfunction findUser(id: number):User | null {\n  return usersFromServer.find(user => user.id === id)\n    || null;\n}\n\nconst initialTodos:Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: findUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState(initialTodos);\n\n  const [newTitle, setNewTitle] = useState('');\n  const [isTitleError, setIsTitleError] = useState(false);\n\n  const [newUser, setNewUser] = useState(0);\n  const [isUserError, setIsUserError] = useState(false);\n\n  function reset() {\n    setNewTitle('');\n    setNewUser(0);\n    setIsTitleError(false);\n    setIsUserError(false);\n  }\n\n  function handleTitleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const regex = /^(?=.*[a-zA-Zа-яА-ЯёЁ0-9])[\\w\\s]*$/;\n\n    if (regex.test(event.target.value)) {\n      setNewTitle(event.target.value);\n    }\n\n    setIsTitleError(false);\n  }\n\n  function handleUserInput(event: React.ChangeEvent<HTMLSelectElement>) {\n    setNewUser(+event.target.value);\n    setIsUserError(false);\n  }\n\n  function handleFormSubmit(event: React.FormEvent) {\n    event.preventDefault();\n\n    setIsUserError(!newUser);\n    setIsTitleError(!newTitle);\n\n    if (!newTitle || !newUser) {\n      return;\n    }\n\n    setTodos(previousTodos => (\n      [...previousTodos,\n        {\n          id: Math.max(...todos.map(todo => todo.id)) + 1,\n          title: newTitle,\n          completed: false,\n          userId: newUser,\n          user: findUser(newUser),\n        },\n      ]\n    ));\n\n    reset();\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            id=\"title\"\n            placeholder=\"Enter a title\"\n            value={newTitle}\n            onChange={handleTitleChange}\n          />\n\n          {isTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User: </label>\n\n          <select\n            data-cy=\"userSelect\"\n            id=\"user\"\n            value={newUser}\n            onChange={handleUserInput}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(({ id, name }) => (\n              <option\n                value={id}\n                key={id}\n              >\n                {name}\n              </option>\n            ))}\n          </select>\n\n          {isUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}