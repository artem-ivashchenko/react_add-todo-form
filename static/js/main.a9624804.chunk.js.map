{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","completed","title","TodoList","todos","map","username","findUser","usersFromServer","find","initialTodos","userId","App","useState","setTodos","newTitle","setNewTitle","titleError","setTitleError","newUser","setNewUser","userError","setUserError","action","method","onSubmit","event","preventDefault","previousTodos","Math","max","htmlFor","type","placeholder","value","onChange","test","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a9624804.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={`TodoInfo ${todo.completed && 'TodoInfo--completed'}`}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {todo.user && (\n        <UserInfo user={todo.user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport { User } from './types/User';\n\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\n\nfunction findUser(id: number):User | null {\n  return usersFromServer.find(user => user.id === id)\n    || null;\n}\n\nconst initialTodos:Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: findUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState(initialTodos);\n\n  const [newTitle, setNewTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n\n  const [newUser, setNewUser] = useState(0);\n  const [userError, setUserError] = useState(false);\n\n  function reset() {\n    setNewTitle('');\n    setNewUser(0);\n    setTitleError(false);\n    setUserError(false);\n  }\n\n  function handleTitleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const regex = /^(?=.*[a-zA-Zа-яА-ЯёЁ0-9])[\\w\\s]*$/;\n\n    if (regex.test(event.target.value)) {\n      setNewTitle(event.target.value);\n    }\n\n    setTitleError(false);\n  }\n\n  function handleUserInput(event: React.ChangeEvent<HTMLSelectElement>) {\n    setNewUser(+event.target.value);\n    setUserError(false);\n  }\n\n  function handleFormSubmit(event: React.FormEvent) {\n    event.preventDefault();\n\n    setUserError(!newUser);\n    setTitleError(!newTitle);\n\n    if (!newTitle || !newUser) {\n      return;\n    }\n\n    setTodos(previousTodos => (\n      [...previousTodos,\n        {\n          id: Math.max(...todos.map(todo => todo.id)) + 1,\n          title: newTitle,\n          completed: false,\n          userId: newUser,\n          user: findUser(newUser),\n        },\n      ]\n    ));\n\n    reset();\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            id=\"title\"\n            placeholder=\"Enter a title\"\n            value={newTitle}\n            onChange={handleTitleChange}\n          />\n\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User: </label>\n\n          <select\n            data-cy=\"userSelect\"\n            id=\"user\"\n            value={newUser}\n            onChange={handleUserInput}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {userError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}